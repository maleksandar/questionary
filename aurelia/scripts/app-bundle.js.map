{"version":3,"sources":["app.js","environment.js","main.js","pages/home.js","pages/login.js","pages/logout.js","pages/question-details.js","pages/questions.js","pages/signup.js","resources/index.js","services/auth.js","resources/elements/question-form.js","resources/elements/question-list.js","resources/elements/question.js","config/sharedResources.js"],"names":["App","auth","dialogService","configureRouter","config","router","title","map","route","moduleId","nav","name","loginModal","open","viewModel","model","then","console","log","response","wasCancelled","output","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","configureContainer","container","start","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","registerInstance","Home","canActivate","isLogedIn","Login","httpClient","dialogController","login","email","password","close","navigate","catch","loginError","fetch","json","Logout","logout","QuestionDetails","activate","params","routeConfig","id","questionDetail","questionContent","question","navModel","setTitle","headline","Questions","Signup","signup","body","globalResources","Auth","sessionStorage","getItem","currentUser","userId","role","userinfo","setItem","user_id","toastr","QuestionForm","postQuestion","text","success","serverError","QuestionList","qss","pageIndexes","qssIsNotEmpty","questions","length","push","splice","currentIndex","Array","from","x","i","valueChanged","newValue","oldValue","setPage","index","Question","quickAnswer","answerText","QuestionId","content","_id","SharedResources","isAdmin"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Auth} from './services/auth';\r\nimport {inject} from 'aurelia-framework';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Login} from './pages/login';\r\n\r\n@inject(Auth, DialogService)\r\nexport class App {\r\n  constructor(auth, dialogService) {\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n  }\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'Questionary';\r\n    config.map([\r\n      { route: '',       moduleId: 'pages/questions', title: 'Questions' },\r\n      { route: 'home',   moduleId: 'pages/home',      title: 'Home', nav: false },\r\n      { route: 'login',  moduleId: 'pages/login',     name: 'login', title: 'Log in' },\r\n      { route: 'logout', moduleId: 'pages/logout',    name: 'logout', title: 'Log out' },\r\n      { route: 'signup', moduleId: 'pages/signup',    name: 'signup', title: 'Sign up' },\r\n      { route: 'question/:id', moduleId: 'pages/question-details', name: 'question-details', title: 'Question' },\r\n    ]);\r\n    this.router = router;\r\n  }\r\n\r\n  loginModal() {\r\n    this.dialogService.open({viewModel: Login, model: 'Are you sure?' })\r\n    .then(response => {\r\n      console.log(response);\r\n      if (!response.wasCancelled) {\r\n        console.log('OK');\r\n      } else {\r\n        console.log('cancelled');\r\n      }\r\n      console.log(response.output);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .plugin('aurelia-dialog');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use\r\n      .developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  configureContainer(aurelia.container);\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n\r\nfunction configureContainer(container) {\r\n  let http = new HttpClient();\r\n  http.configure(config => {\r\n    config\r\n      .useStandardConfiguration()\r\n      .withBaseUrl('api/')\r\n      .withDefaults({\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'X-Requested-With': 'Fetch'\r\n        }\r\n      });\r\n      if (environment.debug) {\r\n        config.withInterceptor({\r\n          request(request) {\r\n            console.log(`Requesting ${request.method} ${request.url}`);\r\n            return request;\r\n          },\r\n          response(response) {\r\n            console.log(`Received ${response.status} ${response.url}`);\r\n            return response;\r\n          }\r\n        });\r\n    }\r\n  });\r\n  container.registerInstance(HttpClient, http); // DI setup.\r\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Home {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  canActivate() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\nimport {Auth} from '../services/auth';\r\nimport {DialogController} from 'aurelia-dialog';\r\n\r\n@inject(Auth, Router, HttpClient, DialogController)\r\nexport class Login {\r\n  constructor(auth, router, httpClient, dialogController) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n    this.httpClient = httpClient;\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.dialogController.close();\r\n        this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true)\r\n      .then(() => {\r\n        if(!this.loginError) {\r\n          this.httpClient.fetch('users/me')\r\n            .then(response => response.json());\r\n        }\r\n      });\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Router, Auth)\r\nexport class Logout {\r\n  constructor(router, auth) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n\r\n    this.auth.logout()\r\n      .then(() => { \r\n        this.router.navigate(\"\");\r\n      });\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport {Router} from 'aurelia-router';\r\n\r\n\r\n@inject(HttpClient)\r\nexport class QuestionDetails {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n  }\r\n\r\n  activate(params, routeConfig) {\r\n    this.routeConfig = routeConfig;\r\n   \r\n    return this.httpClient.fetch(`questions/${params.id}?include=Tags&include=Answers`)\r\n      .then(questionDetail => questionDetail.json())\r\n      .then(question => { \r\n        this.questionContent = question; \r\n        this.routeConfig.navModel.setTitle(question.headline);\r\n      });\r\n  }\r\n}","\r\nexport class Questions {\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(HttpClient, Router)\r\nexport class Signup {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export function configure(config) {\r\n  config.globalResources(['./elements/question-list',\r\n                          './elements/question-form']);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class Auth {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.isLogedIn = sessionStorage.getItem(\"logedIn\") === \"true\";\r\n    this.currentUser = { userId: \"\", role: \"user\" }\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n    .then(response => response.json())\r\n    .then(userinfo => {\r\n      console.log(userinfo);\r\n      // sessionStorage can only save strings not bools.\r\n      sessionStorage.setItem('logedIn', \"true\");\r\n      this.isLogedIn = true;\r\n      this.currentUser.userId = userinfo.user_id;\r\n      sessionStorage.setItem('userId', userinfo.user_id);\r\n      return userinfo;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.setItem('logedIn', \"false\");\r\n    this.isLogedIn = false;\r\n    this.currentUser.userId = \"\";\r\n    sessionStorage.setItem('userId', \"\");\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    });\r\n  }\r\n}","import {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nvar toastr = require('toastr');\r\n\r\n\r\n@inject(HttpClient, Router, toastr)\r\nexport class QuestionForm {\r\n  constructor(httpClient, router, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.toastr = toastr;\r\n  }\r\n\r\n  postQuestion() {\r\n    return this.httpClient.fetch('questions', {\r\n      method: 'post',\r\n      body: json({ headline: this.headline, text: this.text })\r\n    })\r\n    .then(() => {\r\n      this.toastr.success('You have successfully posted your question');\r\n      this.router.navigate(\"\");\r\n    })\r\n    .catch(() => this.serverError = true);\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class QuestionList {\r\n  @bindable value;\r\n\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.qss = [];\r\n    this.pageIndexes = [];\r\n    this.qssIsNotEmpty = false;\r\n\r\n    this.httpClient.fetch('questions?include=Answers&include=Tags')\r\n      .then(response => response.json())\r\n      .then(questions => {\r\n        this.questions = questions;\r\n        while(this.questions.length != 0)\r\n          this.qss.push(this.questions.splice(0,6));\r\n        this.qssIsNotEmpty = this.qss.length != 0;\r\n        if(this.qssIsNotEmpty) {\r\n          this.questions = this.qss[0];\r\n          this.currentIndex = 0;\r\n          this.pageIndexes = Array.from(new Array(this.qss.length), (x,i) => i);\r\n        }\r\n    });\r\n  }\r\n\r\n  valueChanged(newValue, oldValue) {\r\n    this.questions = this.qss[newValue];\r\n  }\r\n\r\n  setPage(index) {\r\n    this.currentIndex = index;\r\n  }\r\n}\r\n\r\n","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Auth} from '../../services/auth';\r\n\r\nvar toastr = require('toastr');\r\n\r\n@inject(HttpClient, toastr, Auth)\r\nexport class Question {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, toastr, auth) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.auth = auth;\r\n  }\r\n\r\n  quickAnswer() {\r\n    this.httpClient.fetch('answers', { method: 'post', body: json({ text: this.answerText, QuestionId: this.content._id }) })\r\n      .then(() => {\r\n        this.toastr.success('You have successfully posted your answer');\r\n      });\r\n  }\r\n}","export class SharedResources {\r\n  constructor() {\r\n    this.currentUser = {\r\n      isLogedIn: false,\r\n      isAdmin: false,\r\n      id: -1,\r\n      name: \"\",\r\n      email: \"\"\r\n    };\r\n  }\r\n}"],"sourceRoot":"../src"}