{"version":3,"sources":["app.js","environment.js","main.js","config/sharedResources.js","pages/login.js","pages/logout.js","pages/questions.js","pages/signup.js","resources/index.js","services/auth.js","resources/elements/question-list.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","auth","sharedResources","navbarElements","href","icon","currentUser","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","configureContainer","container","start","then","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","console","log","method","url","response","status","registerInstance","SharedResources","isLogedIn","isAdmin","Login","login","email","password","navigate","catch","loginError","Logout","logout","Questions","message","Signup","httpClient","signup","fetch","body","Auth","json","QuestionList","questions","valueChanged","newValue","oldValue"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {Auth} from './services/auth';\nimport {SharedResources} from './config/sharedResources';\n\n@inject(Auth, SharedResources)\nexport class App {\n\n  configureRouter(config, router){\n    config.title = 'Contacts';\n    config.map([\n      { route: '',              moduleId: 'pages/questions',   title: 'Questions' },\n      { route: 'login',  moduleId: 'pages/login', name: 'login', title: 'Log in' },\n      { route: 'logout',  moduleId: 'pages/logout', name: 'logout', title: 'Log out' },\n      { route: 'signup', moduleId: 'pages/signup', name: 'signup', title: 'Sign up' }\n    ]);\n    this.router = router;\n  }\n  constructor(auth, sharedResources) {\n    this.auth = auth;\n    this.navbarElements = [\n      { title: 'Home', href: '#', icon: 'fa fa-home' },\n      { title: 'Questions', href: '#' },\n      { title: 'About', href: '#' }\n      // { title: 'Sign Up', href: '#/signup' },\n      // { title: 'Log In', href: '#/login '}\n    ];\n    this.currentUser = sharedResources.currentUser;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  configureContainer(aurelia.container);\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n\nfunction configureContainer(container) {\n  let http = new HttpClient();\n  http.configure(config => {\n    config\n      .useStandardConfiguration()\n      .withBaseUrl('api/')\n      .withDefaults({\n        credentials: 'same-origin',\n        headers: {\n          'Accept': 'application/json',\n          'X-Requested-With': 'Fetch'\n        }\n      });\n      if (environment.debug) {\n        config.withInterceptor({\n          request(request) {\n            console.log(`Requesting ${request.method} ${request.url}`);\n            return request;\n          },\n          response(response) {\n            console.log(`Received ${response.status} ${response.url}`);\n            return response;\n          }\n        });\n    }\n  });\n  container.registerInstance(HttpClient, http); // DI setup.\n}","export class SharedResources {\r\n  constructor() {\r\n    this.currentUser = {\r\n      isLogedIn: false,\r\n      isAdmin: false\r\n    }\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Auth, Router)\r\nexport class Login {\r\n  constructor(auth, router) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true);\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Router, Auth)\r\nexport class Logout {\r\n  constructor(router, auth) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n\r\n    this.auth.logout()\r\n      .then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export class Questions {\r\n  constructor() {\r\n    this.message = \"hello\";\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(HttpClient, Router)\r\nexport class Signup {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class Auth {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.isLogedIn = false;\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n      .then(response => {\r\n        this.isLogedIn = true;\r\n        return response.json();\r\n      });\r\n      \r\n  }\r\n\r\n  logout() {\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    }).then(response => { this.isLogedIn = false })\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class QuestionList {\n  @bindable value;\n\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n\n    this.httpClient.fetch('questions')\n      .then(response => response.json())\n      .then(questions => this.questions = questions);\n  }\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n"],"sourceRoot":"../src"}