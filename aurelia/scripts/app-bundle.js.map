{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/question.js"],"names":["App","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","client","Question","questions","get","console","log","response","JSON","parse","valueChanged","newValue","oldValue"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,cAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBed,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCD,MAAIa,SAAS,mCAAb;MACaC,mBAAAA;AAGX,wBAAc;AAAA;;AAAA;;AAAA;;AACZ,WAAKC,SAAL,GAAiB,EAAjB;AACAF,aAAOG,GAAP,CAAW,qCAAX,EACCL,IADD,CACM,qBAAa;AACjBM,gBAAQC,GAAR,CAAY,YAAZ,EAA0BH,UAAUI,QAApC;;AAEA,cAAKJ,SAAL,GAAiBK,KAAKC,KAAL,CAAWN,UAAUI,QAArB,CAAjB;AACD,OALD;AAMD;;uBAEDG,qCAAaC,UAAUC,UAAU,CAEhC","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\nlet client = new HttpClient();\nexport class Question {\n  @bindable value;\n\n  constructor() {\n    this.questions = [];\n    client.get('http://localhost:3000/api/questions')\n    .then(questions => {\n      console.log('response: ', questions.response);\n      \n      this.questions = JSON.parse(questions.response);    \n    });  \n  }\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n"],"sourceRoot":"../src"}