{"version":3,"sources":["app.js","environment.js","main.js","config/sharedResources.js","pages/home.js","pages/login.js","pages/logout.js","pages/questions.js","pages/signup.js","resources/index.js","services/auth.js","resources/elements/question-form.js","resources/elements/question-list.js"],"names":["App","auth","configureRouter","config","router","title","map","route","moduleId","nav","name","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","configureContainer","container","start","then","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","console","log","method","url","response","status","registerInstance","SharedResources","currentUser","isLogedIn","isAdmin","Home","canActivate","Login","login","email","password","navigate","catch","loginError","Logout","logout","Questions","message","Signup","httpClient","signup","fetch","body","globalResources","Auth","sessionStorage","getItem","setItem","json","toastr","QuestionForm","postQuestion","headline","text","success","serverError","QuestionList","isDefined","questions","id","user","_id","valueChanged","newValue","oldValue"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Auth} from './services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class App {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'Questionary';\r\n    config.map([\r\n      { route: '',              moduleId: 'pages/questions',   title: 'Questions' },\r\n      { route: 'home',              moduleId: 'pages/home',   title: 'Home', nav: false },\r\n      { route: 'login',  moduleId: 'pages/login', name: 'login', title: 'Log in' },\r\n      { route: 'logout',  moduleId: 'pages/logout', name: 'logout', title: 'Log out' },\r\n      { route: 'signup', moduleId: 'pages/signup', name: 'signup', title: 'Sign up' }\r\n    ]);\r\n    this.router = router;\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  configureContainer(aurelia.container);\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n\r\nfunction configureContainer(container) {\r\n  let http = new HttpClient();\r\n  http.configure(config => {\r\n    config\r\n      .useStandardConfiguration()\r\n      .withBaseUrl('api/')\r\n      .withDefaults({\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'X-Requested-With': 'Fetch'\r\n        }\r\n      });\r\n      if (environment.debug) {\r\n        config.withInterceptor({\r\n          request(request) {\r\n            console.log(`Requesting ${request.method} ${request.url}`);\r\n            return request;\r\n          },\r\n          response(response) {\r\n            console.log(`Received ${response.status} ${response.url}`);\r\n            return response;\r\n          }\r\n        });\r\n    }\r\n  });\r\n  container.registerInstance(HttpClient, http); // DI setup.\r\n}","export class SharedResources {\r\n  constructor() {\r\n    this.currentUser = {\r\n      isLogedIn: false,\r\n      isAdmin: false\r\n    }\r\n  }\r\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Home {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  canActivate() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Auth, Router)\r\nexport class Login {\r\n  constructor(auth, router) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true);\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Router, Auth)\r\nexport class Logout {\r\n  constructor(router, auth) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n\r\n    this.auth.logout()\r\n      .then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export class Questions {\r\n  constructor() {\r\n    this.message = \"hello\";\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(HttpClient, Router)\r\nexport class Signup {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export function configure(config) {\r\n  config.globalResources(['./elements/question-list',\r\n          './elements/question-form']);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class Auth {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.isLogedIn = sessionStorage.getItem(\"logedIn\") === \"true\" ? true : false;\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n    .then(response => {\r\n      // sessionStorage can only save strings not bools.\r\n      sessionStorage.setItem('logedIn', \"true\");\r\n      this.isLogedIn = true;\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    })\r\n    .then(response => { \r\n      sessionStorage.setItem('logedIn', \"false\");\r\n      this.isLogedIn = false;\r\n    });\r\n  }\r\n}","import {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nvar toastr = require('toastr');\r\n\r\n\r\n@inject(HttpClient, Router, toastr)\r\nexport class QuestionForm {\r\n  constructor(httpClient, router, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.toastr = toastr;\r\n  }\r\n\r\n  postQuestion() {\r\n    return this.httpClient.fetch('questions', {\r\n      method: 'post',\r\n      body: json({ headline: this.headline, text: this.text })\r\n    })\r\n    .then(() => {\r\n      // todo: add toster!\r\n      this.toastr.success('You have successfully posted your question');\r\n      this.router.navigate(\"\");\r\n    })\r\n    .catch(() => this.serverError = true);\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class QuestionList {\r\n  @bindable value;\r\n\r\n  constructor(httpClient) {\r\n    this.currentUser = { isDefined: false };\r\n    this.httpClient = httpClient;\r\n\r\n    this.httpClient.fetch('questions')\r\n      .then(response => response.json())\r\n      .then(questions => this.questions = questions);\r\n\r\n    this.httpClient.fetch('users/me')\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        this.currentUser.id = user._id;\r\n        this.currentUser.name = user.name;\r\n        this.currentUser.isDefined = true;\r\n      });\r\n  }\r\n\r\n  valueChanged(newValue, oldValue) {\r\n\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"../src"}