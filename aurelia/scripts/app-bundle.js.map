{"version":3,"sources":["app.js","environment.js","main.js","pages/home.js","pages/login.js","pages/logout.js","pages/questions.js","pages/signup.js","resources/index.js","services/auth.js","resources/elements/question-form.js","resources/elements/question-list.js","resources/elements/question.js"],"names":["App","auth","configureRouter","config","router","title","map","route","moduleId","nav","name","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","configureContainer","container","start","then","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","console","log","method","url","response","status","registerInstance","Home","canActivate","isLogedIn","Login","httpClient","login","email","password","navigate","catch","loginError","fetch","json","Logout","logout","Questions","Signup","signup","body","globalResources","Auth","sessionStorage","getItem","setItem","toastr","QuestionForm","postQuestion","headline","text","success","serverError","QuestionList","qss","pageIndexes","qssIsNotEmpty","questions","length","push","splice","currentIndex","Array","from","x","i","valueChanged","newValue","oldValue","setPage","index","Question","quickAnswer","answerText","QuestionId","content","_id"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Auth} from './services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class App {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'Questionary';\r\n    config.map([\r\n      { route: '',       moduleId: 'pages/questions', title: 'Questions' },\r\n      { route: 'home',   moduleId: 'pages/home',      title: 'Home', nav: false },\r\n      { route: 'login',  moduleId: 'pages/login',     name: 'login', title: 'Log in' },\r\n      { route: 'logout', moduleId: 'pages/logout',    name: 'logout', title: 'Log out' },\r\n      { route: 'signup', moduleId: 'pages/signup',    name: 'signup', title: 'Sign up' }\r\n    ]);\r\n    this.router = router;\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  configureContainer(aurelia.container);\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n\nfunction configureContainer(container) {\n  let http = new HttpClient();\n  http.configure(config => {\n    config\n      .useStandardConfiguration()\n      .withBaseUrl('api/')\n      .withDefaults({\n        credentials: 'same-origin',\n        headers: {\n          'Accept': 'application/json',\n          'X-Requested-With': 'Fetch'\n        }\n      });\n      if (environment.debug) {\n        config.withInterceptor({\n          request(request) {\n            console.log(`Requesting ${request.method} ${request.url}`);\n            return request;\n          },\n          response(response) {\n            console.log(`Received ${response.status} ${response.url}`);\n            return response;\n          }\n        });\n    }\n  });\n  container.registerInstance(HttpClient, http); // DI setup.\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Home {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  canActivate() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Auth, Router, HttpClient)\r\nexport class Login {\r\n  constructor(auth, router, httpClient) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n    this.httpClient = httpClient;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true)\r\n      .then(() => {\r\n        if(!this.loginError) {\r\n          this.httpClient.fetch('users/me')\r\n            .then(response => response.json());\r\n        } \r\n      });\r\n  }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Auth} from '../services/auth';\r\n\r\n@inject(Router, Auth)\r\nexport class Logout {\r\n  constructor(router, auth) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n\r\n    this.auth.logout()\r\n      .then(() => { \r\n        this.router.navigate(\"\");\r\n      });\r\n  }\r\n}","\r\nexport class Questions {\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(HttpClient, Router)\r\nexport class Signup {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => this.router.navigate(\"\"));\r\n  }\r\n}","export function configure(config) {\r\n  config.globalResources(['./elements/question-list',\r\n          './elements/question-form']);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class Auth {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.isLogedIn = sessionStorage.getItem(\"logedIn\") === \"true\" ? true : false;\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n    .then(response => {\r\n      // sessionStorage can only save strings not bools.\r\n      sessionStorage.setItem('logedIn', \"true\");\r\n      this.isLogedIn = true;\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.setItem('logedIn', \"false\");\r\n    this.isLogedIn = false;\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    });\r\n  }\r\n}","import {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nvar toastr = require('toastr');\r\n\r\n\r\n@inject(HttpClient, Router, toastr)\r\nexport class QuestionForm {\r\n  constructor(httpClient, router, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.toastr = toastr;\r\n  }\r\n\r\n  postQuestion() {\r\n    return this.httpClient.fetch('questions', {\r\n      method: 'post',\r\n      body: json({ headline: this.headline, text: this.text })\r\n    })\r\n    .then(() => {\r\n      // todo: add toster!\r\n      this.toastr.success('You have successfully posted your question');\r\n      this.router.navigate(\"\");\r\n    })\r\n    .catch(() => this.serverError = true);\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class QuestionList {\r\n  @bindable value;\r\n\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.qss = [];\r\n    this.pageIndexes = [];\r\n    this.qssIsNotEmpty = false;\r\n\r\n    this.httpClient.fetch('questions')\r\n      .then(response => response.json())\r\n      .then(questions => {\r\n        this.questions = questions;\r\n        while(this.questions.length != 0)\r\n          this.qss.push(this.questions.splice(0,6));\r\n        this.qssIsNotEmpty = this.qss.length != 0;\r\n        if(this.qssIsNotEmpty) {\r\n          this.questions = this.qss[0];\r\n          this.currentIndex = 0;\r\n          this.pageIndexes = Array.from(new Array(this.qss.length), (x,i) => i);\r\n        }\r\n    });\r\n  }\r\n\r\n  valueChanged(newValue, oldValue) {\r\n    this.questions = this.qss[newValue];\r\n  }\r\n\r\n  setPage(index) {\r\n    this.currentIndex = index;\r\n  }\r\n}\r\n\r\n","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nvar toastr = require('toastr');\r\n\r\n@inject(HttpClient, toastr)\r\nexport class Question {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n  }\r\n\r\n  quickAnswer() {\r\n    this.httpClient.fetch('answers', { method: 'post', body: json({ text: this.answerText, QuestionId: this.content._id }) })\r\n      .then(() => {\r\n              this.toastr.success('You have successfully posted your question');\r\n\r\n      });\r\n  }\r\n}"],"sourceRoot":"../src"}