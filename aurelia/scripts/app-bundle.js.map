{"version":3,"sources":["app.js","environment.js","main.js","dialogs/login.js","dialogs/signup.js","pages/about.js","pages/admin.js","pages/home.js","pages/question-details.js","pages/questions.js","resources/index.js","services/auth.js","resources/elements/answer.js","resources/elements/confirmation-dialog.js","resources/elements/edit-dialog.js","resources/elements/question-filter.js","resources/elements/question-form.js","resources/elements/question-list.js","resources/elements/question.js","resources/value-converters/dates.js"],"names":["App","auth","dialogService","configureRouter","config","router","title","map","route","moduleId","nav","name","loginModal","open","viewModel","signupModal","isLogedIn","currentUser","role","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","configureContainer","container","start","then","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","console","log","method","url","response","status","registerInstance","Login","httpClient","dialogController","login","email","password","close","catch","loginError","fetch","json","Signup","signup","body","navigate","reason","About","Admin","canActivate","Home","sideForm","showFilter","showForm","QuestionDetails","ea","activate","params","routeConfig","questionPromise","id","questionDetail","questionContent","question","navModel","setTitle","headline","answerPromise","answers","all","attached","subscriber","subscribe","message","detached","dispose","Questions","globalResources","Auth","sessionStorage","getItem","userId","userinfo","setItem","user_role","user_id","logout","toastr","Answer","delete","model","wasCancelled","content","_id","success","deleted","voteUp","voteResp","vote","positiveVotes","voteDown","negativeVotes","parseInt","createdByUserId","ConfirmationDialog","EditDialog","retObj","domain","tag","domains","tags","TagQuestions","TagText","DomainText","removeTag","tagText","index","indexOf","splice","addTag","push","QuestionFilter","filter","publish","questionText","text","dateFrom","dateTo","QuestionForm","postQuestion","tagObjects","Tags","serverError","QuestionList","qss","pageIndexes","qssIsNotEmpty","getRequestBase","length","forEach","getQuestions","source","questions","currentIndex","Array","from","x","i","Question","pinned","quickAnswer","answerText","QuestionId","Answers","edit","pin","DateFormatValueConverter","toView","value","calendar"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Auth } from './services/auth';\r\nimport { inject, computedFrom } from 'aurelia-framework';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { Login } from './dialogs/login';\r\nimport { Signup } from './dialogs/signup';\r\n\r\n\r\n@inject(Auth, DialogService)\r\nexport class App {\r\n  constructor(auth, dialogService) {\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n  }\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'Questionary';\r\n    config.map([\r\n      { route: '',       moduleId: 'pages/questions', title: 'Questions' },\r\n      { route: 'home',   moduleId: 'pages/home',      title: 'Home', nav: false },\r\n      { route: 'admin',   moduleId: 'pages/admin',      title: 'Admin', nav: false },\r\n      { route: 'about',   moduleId: 'pages/about',      title: 'About' },\r\n      { route: 'question/:id', moduleId: 'pages/question-details', name: 'question-details', title: 'Question' },\r\n    ]);\r\n    this.router = router;\r\n  }\r\n\r\n  loginModal() {\r\n    this.dialogService.open({ viewModel: Login });\r\n  }\r\n\r\n  signupModal() {\r\n    this.dialogService.open({ viewModel: Signup });\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n\r\n  @computedFrom('auth.currentUser.role')\r\n  get isAdmin() {\r\n    return this.auth.currentUser.role === 'admin';\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .plugin('aurelia-dialog');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use\r\n      .developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  configureContainer(aurelia.container);\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n\r\nfunction configureContainer(container) {\r\n  let http = new HttpClient();\r\n  http.configure(config => {\r\n    config\r\n      .useStandardConfiguration()\r\n      .withBaseUrl('api/')\r\n      .withDefaults({\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'X-Requested-With': 'Fetch'\r\n        }\r\n      });\r\n      if (environment.debug) {\r\n        config.withInterceptor({\r\n          request(request) {\r\n            console.log(`Requesting ${request.method} ${request.url}`);\r\n            return request;\r\n          },\r\n          response(response) {\r\n            console.log(`Received ${response.status} ${response.url}`);\r\n            return response;\r\n          }\r\n        });\r\n    }\r\n  });\r\n  container.registerInstance(HttpClient, http); // DI setup.\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { Auth } from '../services/auth';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n@inject(Auth, Router, HttpClient, DialogController)\r\nexport class Login {\r\n  constructor(auth, router, httpClient, dialogController) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n    this.httpClient = httpClient;\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.dialogController.close();\r\n        // this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true)\r\n      .then(() => {\r\n        if(!this.loginError) {\r\n          this.httpClient.fetch('users/me')\r\n            .then(response => response.json());\r\n        }\r\n      });\r\n  }\r\n}","import { bindable, inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n\r\n@inject(HttpClient, Router, DialogController)\r\nexport class Signup {\r\n  constructor(httpClient, router, dialogController) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => {\r\n      this.dialogController.close();\r\n      this.router.navigate(\"\");\r\n    }).catch(reason => reason.json())\r\n    .then(reason => {\r\n      console.log(reason);\r\n      if(reason.name === \"SequelizeUniqueConstraintError\") {\r\n        console.log('not unique');\r\n      }\r\n    }); \r\n  }\r\n}","export class About {\r\n  \r\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Admin {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n  canActivate() {\r\n    return this.auth.currentUser.role === 'admin';\r\n  }\r\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Home {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n    this.sideForm = null;\r\n  }\r\n\r\n  canActivate() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n    showFilter() {\r\n    if(this.sideForm === 'filter') {\r\n      this.sideForm = null\r\n    } else {\r\n      this.sideForm = 'filter';\r\n    }  }\r\n\r\n  showForm() {\r\n    if(this.sideForm === 'form') {\r\n      this.sideForm = null\r\n    } else {\r\n      this.sideForm = 'form';\r\n    }\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class QuestionDetails {\r\n  constructor(httpClient, ea) {\r\n    this.httpClient = httpClient;\r\n    this.ea = ea;\r\n  }\r\n\r\n  activate(params, routeConfig) {\r\n    this.routeConfig = routeConfig;  \r\n\r\n    var questionPromise = this.httpClient.fetch(`questions/${params.id}?include=Tags&include=Answers`)\r\n      .then(questionDetail => questionDetail.json())\r\n      .then(question => { \r\n        this.questionContent = question; \r\n        this.routeConfig.navModel.setTitle(question.headline);\r\n      });\r\n\r\n    var answerPromise = this.httpClient.fetch(`answers/question/${params.id}`)\r\n      .then(response => response.json())\r\n      .then(answers => { \r\n        this.answers = answers; \r\n      });\r\n\r\n    return Promise.all([questionPromise, answerPromise]);\r\n  }\r\n\r\n  attached() {\r\n    this.subscriber = this.ea.subscribe('questionAnswered', message => {\r\n      this.httpClient.fetch(`answers/question/${message.id}`)\r\n        .then(response => response.json())\r\n        .then(answers => { \r\n          this.answers = answers;\r\n                console.log(answers);\r\n        });    \r\n    });\r\n  }\r\n\r\n  detached() {\r\n    this.subscriber.dispose();\r\n  }\r\n}","import { Auth } from '../services/auth';\r\nimport { inject, computedFrom } from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Questions {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n    this.sideForm = null;\r\n  }\r\n\r\n  showFilter() {\r\n    if(this.sideForm === 'filter') {\r\n      this.sideForm = null\r\n    } else {\r\n      this.sideForm = 'filter';\r\n    }  }\r\n\r\n  showForm() {\r\n    if(this.sideForm === 'form') {\r\n      this.sideForm = null\r\n    } else {\r\n      this.sideForm = 'form';\r\n    }\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","export function configure(config) {\r\n  config.globalResources(['./elements/question-list',\r\n                          './elements/question-form',\r\n                          './elements/question-filter']);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\n\r\n\r\n@inject(HttpClient, Router)\r\nexport class Auth {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.isLogedIn = sessionStorage.getItem(\"logedIn\") === \"true\";\r\n    this.currentUser = { userId: sessionStorage.getItem(\"userId\"), role: sessionStorage.getItem(\"role\") }\r\n    console.log('auth constructor', this.currentUser);\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n    .then(response => response.json())\r\n    .then(userinfo => {\r\n      console.log(userinfo);\r\n      // sessionStorage can only save strings not bools.\r\n      sessionStorage.setItem('role', userinfo.user_role)\r\n      this.currentUser.role = userinfo.user_role;\r\n      sessionStorage.setItem('logedIn', \"true\");\r\n      this.isLogedIn = true;\r\n      this.currentUser.userId = userinfo.user_id;\r\n      sessionStorage.setItem('userId', userinfo.user_id);\r\n      return userinfo;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.setItem('role', \"\")\r\n    this.currentUser.role = \"\";\r\n    sessionStorage.setItem('logedIn', \"false\");\r\n    this.isLogedIn = false;\r\n    this.currentUser.userId = \"\";\r\n    sessionStorage.setItem('userId', \"\");\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    }).then(() => {\r\n      this.router.navigate(\"\");\r\n    });\r\n  }\r\n}","import { bindable, inject, computedFrom } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Auth } from '../../services/auth';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { ConfirmationDialog } from './confirmation-dialog';\r\n\r\nvar toastr = require('toastr');\r\n\r\n@inject(HttpClient, toastr, Auth, DialogService)\r\nexport class Answer {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, toastr, auth, dialogService) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n  }\r\n\r\n  delete() {\r\n    this.dialogService.open({ viewModel: ConfirmationDialog, model: { headline: \"Delete answer\", message: \"Are you sure you want to delete this answer?\"} })\r\n      .then(response => {\r\n        if(!response.wasCancelled) {\r\n          console.log(response);\r\n          this.httpClient.fetch(`answers/${this.content._id}`, { method: 'delete' })\r\n            .then(() => {\r\n              this.toastr.success('You have successfully deleted your answer');\r\n              this.deleted = true;\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  voteUp() {\r\n    this.httpClient.fetch(`answers/votes/${this.content._id}/thumbsup`, { method: 'put'})\r\n      .then(response => response.json())\r\n      .then(voteResp => {\r\n        if(voteResp.vote)\r\n          this.content.positiveVotes += 1;\r\n      });\r\n  }\r\n\r\n  voteDown() {\r\n    this.httpClient.fetch(`answers/votes/${this.content._id}/thumbsdown`, { method: 'put'})\r\n      .then(response => response.json())\r\n      .then(voteResp => {\r\n        if(voteResp.vote)\r\n          this.content.negativeVotes += 1;\r\n      });\r\n  }\r\n\r\n  @computedFrom('auth.currentUser.userId', 'content.createdByUserId')\r\n  get authorized() {\r\n    return parseInt(this.auth.currentUser.userId) === parseInt(this.content.createdByUserId);\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n@inject(DialogController)\r\nexport class ConfirmationDialog {\r\n  constructor(dialogController) {\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  activate(content) {\r\n    this.message = content.message;\r\n    this.headline = content.headline;\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n@inject(HttpClient, DialogController)\r\nexport class EditDialog {\r\n    constructor(httpClient, dialogController){\r\n        this.httpClient = httpClient;\r\n        this.dialogController = dialogController;\r\n        this.retObj = { domain: \"\"};\r\n        this.tag = \"\";\r\n        this.httpClient.fetch('domains')\r\n            .then(response => response.json())\r\n            .then(domains => { this.domains = domains; console.log(\"Domains:\", this.domains)})\r\n            .catch(reason => { console.log(reason); });\r\n\r\n    }\r\n\r\n    activate(content) {\r\n        this.headline = content.headline;\r\n        this.retObj.question = content.question;\r\n        this.retObj.tags = content.question.TagQuestions.map(tag => {return tag.TagText; });\r\n        this.retObj.domain = content.question.DomainText;\r\n    }\r\n\r\n    removeTag(tagText) {\r\n        var index = this.retObj.tags.indexOf(tagText);\r\n        if (index > -1) {\r\n            this.retObj.tags.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    addTag() {\r\n        if(this.tag) {\r\n            this.retObj.tags.push(this.tag);\r\n            this.tag = \"\";\r\n        }\r\n    }\r\n\r\n}","import { bindable, inject, computedFrom } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class QuestionFilter {\r\n  constructor(httpClient, ea) {\r\n    this.httpClient = httpClient;\r\n    this.ea = ea;\r\n    this.tags = [];\r\n    this.httpClient.fetch('domains')\r\n      .then(response => response.json())\r\n      .then(domains => { this.domains = domains; console.log(\"Domains:\", this.domains)})\r\n      .catch(reason => { console.log(reason); });\r\n  }\r\n\r\n  filter() {\r\n    this.ea.publish('questionsFiltered', { \r\n      questionText: this.questionText,\r\n      tags: this.tags,\r\n      domain: this.domain.text,\r\n      dateFrom: this.dateFrom,\r\n      dateTo: this.dateTo\r\n    });\r\n  }\r\n\r\n  addTag() {\r\n    if(this.tag) {\r\n      this.tags.push(this.tag);\r\n      this.tag = \"\";\r\n    }\r\n  }\r\n\r\n  removeTag(tagText) {\r\n    var index = this.tags.indexOf(tagText);\r\n    if (index > -1) {\r\n        this.tags.splice(index, 1);\r\n    }\r\n  }\r\n}","import { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { inject } from 'aurelia-framework';\r\nvar toastr = require('toastr');\r\n\r\n\r\n@inject(HttpClient, toastr)\r\nexport class QuestionForm {\r\n  constructor(httpClient, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.tags = [];\r\n    this.tag = \"\";\r\n    this.httpClient.fetch('domains')\r\n      .then(response => response.json())\r\n      .then(domains => { this.domains = domains; console.log(\"Domains:\", this.domains)})\r\n      .catch(reason => { console.log(reason); });\r\n  }\r\n\r\n  postQuestion() {\r\n    var tagObjects = this.tags.map(tag => { return { text: tag }; })\r\n    return this.httpClient.fetch('questions', {\r\n      method: 'post',\r\n      body: json({ headline: this.headline, text: this.text, Tags: tagObjects, DomainText: this.domain.text })\r\n    })\r\n    .then(() => {\r\n      this.toastr.success('You have successfully posted your question');\r\n      this.headline = \"\";\r\n      this.text = \"\";\r\n      this.tags = [];\r\n    })\r\n    .catch(() => this.serverError = true);\r\n  }\r\n\r\n  removeTag(tagText) {\r\n    var index = this.tags.indexOf(tagText);\r\n    if (index > -1) {\r\n        this.tags.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addTag() {\r\n    if(this.tag) {\r\n      this.tags.push(this.tag);\r\n      this.tag = \"\";\r\n    }\r\n  }\r\n}","import { bindable, inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class QuestionList {\r\n  @bindable source;\r\n\r\n  constructor(httpClient, ea) {\r\n    this.httpClient = httpClient;\r\n    this.ea = ea;\r\n    this.qss = [];\r\n    this.pageIndexes = [];\r\n    this.qssIsNotEmpty = false;\r\n  }\r\n\r\n  attached() {\r\n    this.subscriber = this.ea.subscribe('questionsFiltered', message => {\r\n      this.filter = message;\r\n      let request = this.getRequestBase();\r\n      if(message.domain) {\r\n        request += `&domainFilter=${message.domain}`\r\n      }\r\n      if(message.questionText) {\r\n        request += `&questiontextFilter=${message.questionText}`\r\n      }\r\n      if(message.tags.length) {\r\n        message.tags.forEach(tag => {request+= `&tagFilter=${tag}`});\r\n      }\r\n      this.getQuestions(request);\r\n    });\r\n\r\n    this.getQuestions(this.getRequestBase());\r\n  }\r\n\r\n  getRequestBase() {\r\n    let request = '';\r\n    if(this.source === 'pinned') {\r\n      request = 'questions/pinned?';\r\n    } else if(this.source === 'mine') {\r\n      request = 'questions/mine?';\r\n    } else {\r\n      request = 'questions?include=Answers&include=Tags'\r\n    }\r\n\r\n    return request;\r\n  }\r\n\r\n  getQuestions(request) {\r\n    this.httpClient.fetch(request)\r\n      .then(response => response.json())\r\n      .then(questions => {\r\n        this.questions = questions;\r\n        this.qss = [];\r\n        while(this.questions.length != 0)\r\n          this.qss.push(this.questions.splice(0,6));\r\n        this.qssIsNotEmpty = this.qss.length != 0;\r\n        if(this.qssIsNotEmpty) {\r\n          this.questions = this.qss[0];\r\n          this.currentIndex = 0;\r\n          this.pageIndexes = Array.from(new Array(this.qss.length), (x,i) => i);\r\n        }\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    this.subscriber.dispose();\r\n  }\r\n\r\n  // valueChanged(newValue, oldValue) {\r\n  //   this.questions = this.qss[newValue];\r\n  // }\r\n\r\n  // setPage(index) {\r\n  //   this.currentIndex = index;\r\n  // }\r\n}\r\n\r\n","import { bindable, inject, computedFrom } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Auth } from '../../services/auth';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { ConfirmationDialog } from './confirmation-dialog';\r\nimport { EditDialog } from './edit-dialog';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nvar toastr = require('toastr');\r\n\r\n@inject(HttpClient, toastr, Auth, DialogService, EventAggregator)\r\nexport class Question {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, toastr, auth, dialogService, ea) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n    this.ea = ea;\r\n  }\r\n\r\n  attached() {\r\n    this.httpClient.fetch(`pins/question/${this.content._id}`)\r\n      .then(response => response.json())\r\n      .then(pinned => { this.pinned = pinned; } )\r\n      .catch(reson => console.log(reason));\r\n  }\r\n\r\n  quickAnswer() {\r\n    this.httpClient.fetch('answers', { method: 'post', body: json({ text: this.answerText, QuestionId: this.content._id }) })\r\n      .then(() => {\r\n        this.answerText = \"\";\r\n        this.content.Answers.push({}); // to incrase the counter;\r\n        this.ea.publish('questionAnswered', { id: this.content._id  });\r\n        this.toastr.success('You have successfully posted your answer');\r\n      });\r\n  }\r\n\r\n  edit() {\r\n    this.dialogService.open({ viewModel: EditDialog, model: {\r\n      headline: \"Edit question\", question: this.content\r\n    }}).then(response => {\r\n      if(!response.wasCancelled) {\r\n          //Saljemo zahtev na server\r\n      }\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    this.dialogService.open({ viewModel: ConfirmationDialog, model: { headline: \"Delete question\", message: \"Are you sure you want to delete this question?\"} })\r\n      .then(response => {\r\n        if(!response.wasCancelled) {\r\n          console.log(response);\r\n          this.httpClient.fetch(`questions/${this.content._id}`, { method: 'delete' })\r\n            .then(() => {\r\n              this.toastr.success('You have successfully deleted your question');\r\n              this.deleted = true;\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  pin() {\r\n    if(!this.pinned)\r\n      this.httpClient.fetch(`pins/question/${this.content._id}`, { method: 'post' });\r\n    if(this.pinned)\r\n      this.httpClient.fetch(`pins/question/${this.content._id}`, { method: 'delete' });\r\n    this.pinned = !this.pinned;\r\n  }\r\n\r\n  voteUp() {\r\n    this.httpClient.fetch(`questions/votes/${this.content._id}/thumbsup`, { method: 'put'})\r\n      .then(response => response.json())\r\n      .then(voteResp => {\r\n        if(voteResp.vote)\r\n          this.content.positiveVotes += 1;\r\n      });\r\n  }\r\n\r\n  voteDown() {\r\n    this.httpClient.fetch(`questions/votes/${this.content._id}/thumbsdown`, { method: 'put'})\r\n      .then(response => response.json())\r\n      .then(voteResp => {\r\n        if(voteResp.vote)\r\n          this.content.negativeVotes += 1;\r\n      });\r\n  }\r\n  \r\n  @computedFrom('auth.currentUser.userId', 'content.createdByUserId')\r\n  get authorized() {\r\n    return parseInt(this.auth.currentUser.userId) === parseInt(this.content.createdByUserId);\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n  toView(value) {\r\n      return moment(value).calendar();\r\n  }\r\n}"],"sourceRoot":"../src"}