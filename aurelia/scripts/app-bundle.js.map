{"version":3,"sources":["app.js","environment.js","main.js","dialogs/login.js","dialogs/signup.js","pages/home.js","pages/question-details.js","pages/questions.js","resources/index.js","services/auth.js","resources/elements/answer.js","resources/elements/confirmation-dialog.js","resources/elements/question-form.js","resources/elements/question-list.js","resources/elements/question.js","resources/value-converters/dates.js"],"names":["App","auth","dialogService","configureRouter","config","router","title","map","route","moduleId","nav","name","loginModal","open","viewModel","signupModal","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","configureContainer","container","start","then","setRoot","http","useStandardConfiguration","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","console","log","method","url","response","status","registerInstance","Login","httpClient","dialogController","login","email","password","close","catch","loginError","fetch","json","Signup","signup","body","navigate","reason","Home","canActivate","isLogedIn","QuestionDetails","ea","activate","params","routeConfig","questionPromise","id","questionDetail","questionContent","question","navModel","setTitle","headline","answerPromise","answers","all","attached","subscriber","subscribe","message","detached","dispose","Questions","globalResources","Auth","sessionStorage","getItem","currentUser","userId","role","userinfo","setItem","user_id","logout","Answer","parseInt","content","createdByUserId","ConfirmationDialog","toastr","QuestionForm","tags","tag","postQuestion","tagObjects","text","Tags","success","serverError","removeTag","tagText","index","indexOf","splice","addTag","push","QuestionList","qss","pageIndexes","qssIsNotEmpty","questions","length","currentIndex","Array","from","x","i","valueChanged","newValue","oldValue","setPage","Question","quickAnswer","answerText","QuestionId","_id","Answers","publish","delete","model","wasCancelled","deleted","pin","pinned","DateFormatValueConverter","toView","value","calendar"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Auth } from './services/auth';\r\nimport { inject } from 'aurelia-framework';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { Login } from './dialogs/login';\r\nimport { Signup } from './dialogs/signup';\r\n\r\n\r\n@inject(Auth, DialogService)\r\nexport class App {\r\n  constructor(auth, dialogService) {\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n  }\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'Questionary';\r\n    config.map([\r\n      { route: '',       moduleId: 'pages/questions', title: 'Questions' },\r\n      { route: 'home',   moduleId: 'pages/home',      title: 'Home', nav: false },\r\n      { route: 'question/:id', moduleId: 'pages/question-details', name: 'question-details', title: 'Question' },\r\n    ]);\r\n    this.router = router;\r\n  }\r\n\r\n  loginModal() {\r\n    this.dialogService.open({ viewModel: Login });\r\n  }\r\n\r\n  signupModal() {\r\n    this.dialogService.open({ viewModel: Signup });\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .plugin('aurelia-dialog');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use\r\n      .developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  configureContainer(aurelia.container);\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n\r\nfunction configureContainer(container) {\r\n  let http = new HttpClient();\r\n  http.configure(config => {\r\n    config\r\n      .useStandardConfiguration()\r\n      .withBaseUrl('api/')\r\n      .withDefaults({\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'X-Requested-With': 'Fetch'\r\n        }\r\n      });\r\n      if (environment.debug) {\r\n        config.withInterceptor({\r\n          request(request) {\r\n            console.log(`Requesting ${request.method} ${request.url}`);\r\n            return request;\r\n          },\r\n          response(response) {\r\n            console.log(`Received ${response.status} ${response.url}`);\r\n            return response;\r\n          }\r\n        });\r\n    }\r\n  });\r\n  container.registerInstance(HttpClient, http); // DI setup.\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { Auth } from '../services/auth';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n@inject(Auth, Router, HttpClient, DialogController)\r\nexport class Login {\r\n  constructor(auth, router, httpClient, dialogController) {\r\n    this.auth = auth;\r\n    this.router = router;\r\n    this.httpClient = httpClient;\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login(this.email, this.password)\r\n      .then(() => {\r\n        this.dialogController.close();\r\n        // this.router.navigate(\"\");\r\n      })\r\n      .catch(() => this.loginError = true)\r\n      .then(() => {\r\n        if(!this.loginError) {\r\n          this.httpClient.fetch('users/me')\r\n            .then(response => response.json());\r\n        }\r\n      });\r\n  }\r\n}","import { bindable, inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n\r\n@inject(HttpClient, Router, DialogController)\r\nexport class Signup {\r\n  constructor(httpClient, router, dialogController) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  signup() {\r\n    this.httpClient.fetch('users', {\r\n      method: 'post',\r\n      body: json({ name: this.name, email: this.email, password: this.password })\r\n    }).then(() => {\r\n      this.dialogController.close();\r\n      this.router.navigate(\"\");\r\n    }).catch(reason => reason.json())\r\n    .then(reason => {\r\n      console.log(reason);\r\n      if(reason.name === \"SequelizeUniqueConstraintError\") {\r\n        console.log('not unique');\r\n      }\r\n    }); \r\n  }\r\n}","import {Auth} from '../services/auth';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(Auth)\r\nexport class Home {\r\n  constructor(auth) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  canActivate() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class QuestionDetails {\r\n  constructor(httpClient, ea) {\r\n    this.httpClient = httpClient;\r\n    this.ea = ea;\r\n  }\r\n\r\n  activate(params, routeConfig) {\r\n    this.routeConfig = routeConfig;  \r\n\r\n    var questionPromise = this.httpClient.fetch(`questions/${params.id}?include=Tags&include=Answers`)\r\n      .then(questionDetail => questionDetail.json())\r\n      .then(question => { \r\n        this.questionContent = question; \r\n        this.routeConfig.navModel.setTitle(question.headline);\r\n      });\r\n\r\n    var answerPromise = this.httpClient.fetch(`answers/question/${params.id}`)\r\n      .then(response => response.json())\r\n      .then(answers => { \r\n        this.answers = answers; \r\n      });\r\n\r\n    return Promise.all([questionPromise, answerPromise]);\r\n  }\r\n\r\n  attached() {\r\n    this.subscriber = this.ea.subscribe('questionAnswered', message => {\r\n      this.httpClient.fetch(`answers/question/${message.id}`)\r\n        .then(response => response.json())\r\n        .then(answers => { \r\n          this.answers = answers;\r\n                console.log(answers);\r\n        });    \r\n    });\r\n  }\r\n\r\n  detached() {\r\n    this.subscriber.dispose();\r\n  }\r\n}","\r\nexport class Questions {\r\n}","export function configure(config) {\r\n  config.globalResources(['./elements/question-list',\r\n                          './elements/question-form']);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\n\r\n\r\n@inject(HttpClient, Router)\r\nexport class Auth {\r\n  constructor(httpClient, router) {\r\n    this.httpClient = httpClient;\r\n    this.router = router;\r\n    this.isLogedIn = sessionStorage.getItem(\"logedIn\") === \"true\";\r\n    this.currentUser = { userId: sessionStorage.getItem(\"userId\"), role: sessionStorage.getItem(\"role\") }\r\n    console.log('auth constructor', this.currentUser);\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.httpClient.fetch('auth/login', {\r\n      method: 'post',\r\n      body: json({ email: email, password: password })\r\n    })\r\n    .then(response => response.json())\r\n    .then(userinfo => {\r\n      console.log(userinfo);\r\n      // sessionStorage can only save strings not bools.\r\n      sessionStorage.setItem('logedIn', \"true\");\r\n      this.isLogedIn = true;\r\n      this.currentUser.userId = userinfo.user_id;\r\n      sessionStorage.setItem('userId', userinfo.user_id);\r\n      return userinfo;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.setItem('logedIn', \"false\");\r\n    this.isLogedIn = false;\r\n    this.currentUser.userId = \"\";\r\n    sessionStorage.setItem('userId', \"\");\r\n    return this.httpClient.fetch('auth/logout', {\r\n      method: 'post'\r\n    }).then(() => {\r\n      this.router.navigate(\"\");\r\n    });\r\n  }\r\n}","import { bindable, inject, computedFrom } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Auth } from '../../services/auth';\r\n\r\n@inject(HttpClient, Auth)\r\nexport class Answer {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, auth) {\r\n    this.httpClient = httpClient;\r\n    this.auth = auth;\r\n  }\r\n\r\n  @computedFrom('auth.currentUser.userId', 'content.createdByUserId')\r\n  get authorized() {\r\n    return parseInt(this.auth.currentUser.userId) === parseInt(this.content.createdByUserId);\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { DialogController } from 'aurelia-dialog';\r\n\r\n@inject(DialogController)\r\nexport class ConfirmationDialog {\r\n  constructor(dialogController) {\r\n    this.dialogController = dialogController;\r\n  }\r\n\r\n  activate(content) {\r\n    this.message = content.message;\r\n    this.headline = content.headline;\r\n  }\r\n}","import { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { inject } from 'aurelia-framework';\r\nvar toastr = require('toastr');\r\n\r\n\r\n@inject(HttpClient, toastr)\r\nexport class QuestionForm {\r\n  constructor(httpClient, toastr) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.tags = [];\r\n    this.tag = \"\";\r\n  }\r\n\r\n  postQuestion() {\r\n    var tagObjects = this.tags.map(tag => { return { text: tag }; })\r\n    return this.httpClient.fetch('questions', {\r\n      method: 'post',\r\n      body: json({ headline: this.headline, text: this.text, Tags: tagObjects })\r\n    })\r\n    .then(() => {\r\n      this.toastr.success('You have successfully posted your question');\r\n      this.headline = \"\";\r\n      this.text = \"\";\r\n      this.tags = [];\r\n    })\r\n    .catch(() => this.serverError = true);\r\n  }\r\n\r\n  removeTag(tagText) {\r\n    var index = this.tags.indexOf(tagText);\r\n    if (index > -1) {\r\n        this.tags.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addTag() {\r\n    this.tags.push(this.tag);\r\n    this.tag = \"\";\r\n  }\r\n}","import {bindable, inject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class QuestionList {\r\n  @bindable value;\r\n\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n    this.qss = [];\r\n    this.pageIndexes = [];\r\n    this.qssIsNotEmpty = false;\r\n\r\n    this.httpClient.fetch('questions?include=Answers&include=Tags')\r\n      .then(response => response.json())\r\n      .then(questions => {\r\n        this.questions = questions;\r\n        while(this.questions.length != 0)\r\n          this.qss.push(this.questions.splice(0,6));\r\n        this.qssIsNotEmpty = this.qss.length != 0;\r\n        if(this.qssIsNotEmpty) {\r\n          this.questions = this.qss[0];\r\n          this.currentIndex = 0;\r\n          this.pageIndexes = Array.from(new Array(this.qss.length), (x,i) => i);\r\n        }\r\n    });\r\n  }\r\n\r\n  valueChanged(newValue, oldValue) {\r\n    this.questions = this.qss[newValue];\r\n  }\r\n\r\n  setPage(index) {\r\n    this.currentIndex = index;\r\n  }\r\n}\r\n\r\n","import { bindable, inject, computedFrom } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Auth } from '../../services/auth';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { ConfirmationDialog } from './confirmation-dialog';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nvar toastr = require('toastr');\r\n\r\n@inject(HttpClient, toastr, Auth, DialogService, EventAggregator)\r\nexport class Question {\r\n  @bindable content;\r\n\r\n  constructor(httpClient, toastr, auth, dialogService, ea) {\r\n    this.httpClient = httpClient;\r\n    this.toastr = toastr;\r\n    this.auth = auth;\r\n    this.dialogService = dialogService;\r\n    this.ea = ea;\r\n  }\r\n\r\n  quickAnswer() {\r\n    this.httpClient.fetch('answers', { method: 'post', body: json({ text: this.answerText, QuestionId: this.content._id }) })\r\n      .then(() => {\r\n        this.answerText = \"\";\r\n        this.content.Answers.push({}); // to incrase the counter;\r\n        this.ea.publish('questionAnswered', { id: this.content._id  });\r\n        this.toastr.success('You have successfully posted your answer');\r\n      });\r\n  }\r\n\r\n  delete() {\r\n    this.dialogService.open({ viewModel: ConfirmationDialog, model: { headline: \"Delete question\", message: \"Are you sure you want to delete this question?\"} })\r\n      .then(response => {\r\n        if(!response.wasCancelled) {\r\n          console.log(response);\r\n          this.httpClient.fetch(`questions/${this.content._id}`, { method: 'delete' })\r\n            .then(() => {\r\n              this.toastr.success('You have successfully deleted your question');\r\n              this.deleted = true;\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  pin() {\r\n    this.pinned = !this.pinned;\r\n  }\r\n  \r\n  @computedFrom('auth.currentUser.userId', 'content.createdByUserId')\r\n  get authorized() {\r\n    return parseInt(this.auth.currentUser.userId) === parseInt(this.content.createdByUserId);\r\n  }\r\n\r\n  @computedFrom('auth.isLogedIn')\r\n  get authenticated() {\r\n    return this.auth.isLogedIn;\r\n  }\r\n}","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n  toView(value) {\r\n      return moment(value).calendar();\r\n  }\r\n}"],"sourceRoot":"../src"}